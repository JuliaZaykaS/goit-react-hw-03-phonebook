{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/Section/Section.module.css","components/Filter/Filter.module.css","components/Section/Section.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Section","title","children","className","s","section","ContactForm","state","name","number","onChangeInput","e","currentTarget","value","setState","onSubmitContact","preventDefault","props","onSubmit","form","this","label","input","type","pattern","required","onChange","button","Component","ContactList","contacts","onBtnClick","contactList","map","id","contactItem","contactInfo","onClick","Filter","filter","onFindName","filterInput","App","addContactToList","newContact","uuidv4","find","contact","alert","findName","deleteContact","contactId","prevState","normalizedFilteredName","toLowerCase","includes","contactsToRender","getFilteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2cf90700.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2yZHy\",\"label\":\"ContactForm_label__2mxBb\",\"input\":\"ContactForm_input__32OJy\",\"button\":\"ContactForm_button__QcfJE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2q_su\",\"contactItem\":\"ContactList_contactItem__stMnA\",\"contactInfo\":\"ContactList_contactInfo__16VTY\",\"button\":\"ContactList_button__hlZjQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1BN9d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInput\":\"Filter_filterInput__2eXlO\"};","import PropTypes from 'prop-types';\r\nimport s from './Section.module.css';\r\n\r\nexport default function Section({ title, children }) {\r\n    return (\r\n        <div className={s.section}>  \r\n        <h1>{title}</h1>\r\n        { children }\r\n        </div>\r\n    )\r\n};\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}","import { Component } from \"react\";\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  onChangeInput = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  onSubmitContact = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    \r\n    this.setState({ name: \"\", number: \"\" });\r\n\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.form} onSubmit={this.onSubmitContact}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n          className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.onChangeInput}\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.onChangeInput}\r\n          />\r\n        </label>\r\n        <button className={s.button} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\nimport s from './ContactList.module.css';\r\n\r\n// export default function ContactList({ title, contacts, onBtnClick }) {\r\nexport default function ContactList({ contacts, onBtnClick }) {\r\n\r\n  return (\r\n    <div>\r\n      {/* <h2>{title}</h2> */}\r\n       <ol className={s.contactList}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className={s.contactItem} key={id}>\r\n            <span className={s.contactInfo}>{name}: {number}</span>\r\n            <button className={s.button} type='button'\r\n              onClick={()=>onBtnClick(id)}>Delete</button>\r\n            </li>\r\n          ))}\r\n        </ol>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nContactList.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  contacts: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n\r\n  }),\r\n  )\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter({ filter, onFindName }) {\r\n  return (\r\n    <>\r\n      <h3>Find contact by name</h3>\r\n      <input className={s.filterInput} type=\"text\" name=\"filter\" value={filter} onChange={onFindName}></input>\r\n    </>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n    filter: PropTypes.string,\r\n}\r\n","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Section from \"../Section/Section\";\nimport ContactForm from \"../ContactForm/ContactForm\";\nimport ContactList from \"../ContactList/ContactList\";\nimport Filter from \"../Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  addContactToList = (name, number) => {\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const doubleContact = this.state.contacts.find(\n      (contact) => contact.name === newContact.name\n    );\n\n    !doubleContact\n      ? this.setState(({ contacts }) => ({\n          contacts: [...contacts, newContact],\n        }))\n      : alert(`${name} is already in contacts`);\n  };\n\n  findName = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts() {\n    const { contacts, filter } = this.state;\n    const normalizedFilteredName = filter.toLowerCase();\n\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilteredName)\n    );\n  }\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  render() {\n    const contactsToRender = this.getFilteredContacts();\n    return (\n      <div>\n        <Section title={\"Phonebook\"}>\n          <ContactForm onSubmit={this.addContactToList} />\n          <h2>Contacts</h2>\n          <Filter value={this.state.filter} onFindName={this.findName} />\n\n          <ContactList\n            contacts={contactsToRender}\n            onBtnClick={this.deleteContact}\n          />\n          {/* <ContactList title={\"Contacts\"} contacts={contactsToRender} onBtnClick={this.deleteContact}/> */}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './components/App/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}